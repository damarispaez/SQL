-- In this final project I used the dataset chinook from https://www.kaggle.com/datasets/alaasedeeq/chinook/code This dataset represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.

--Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT FirstName, LastName, CustomerId, Country
FROM customers
WHERE country <> "USA";

--Show only the Customers from Brazil.

SELECT *
FROM customers
WHERE country = "Brazil";

--Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT cust.firstname, cust.lastname, inv.invoiceId, inv.invoicedate, inv.billingcountry
FROM invoices inv
LEFT JOIN customers cust
ON inv.CustomerId = cust.CustomerId
WHERE inv.billingcountry = "Brazil";

--Show the Employees who are Sales Agents.

SELECT *
FROM employees
WHERE Title = "Sales Support Agent";

--Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT BillingCountry
FROM invoices;

--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT inv.InvoiceId, emp.FirstName, emp.LastName
FROM invoices inv
JOIN customers cust
ON inv.CustomerId = cust.CustomerId
JOIN employees emp
ON cust.SupportRepId = emp.EmployeeId;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT inv.total, cust.Country, cust.FirstName, cust.LastName, emp.FirstName, emp.LastName
FROM invoices inv
JOIN customers cust
ON inv.CustomerId = cust.CustomerId
JOIN employees emp
ON cust.SupportRepId = emp.EmployeeId;

--How many Invoices were there in 2009?

SELECT COUNT(InvoiceDate)
FROM invoices
WHERE InvoiceDate LIKE '2009%';

--What are the total sales for 2009?

SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate LIKE '2009%';

--Write a query that includes the purchased track name with each invoice line ID.

SELECT tr.Name, inv.InvoiceLineId
FROM invoice_items inv
JOIN tracks tr
ON inv.TrackId = tr.TrackId;

--Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT ar.name as Artist, t.Name as Track, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g. Name AS 'Genre'
FROM tracks t
JOIN albums a 
ON a.AlbumId = t.AlbumId
JOIN media_types m
ON m.MediaTypeId = t.MediaTypeId
JOIN genres g
ON g.GenreId = t.GenreId;

--Show the total sales made by each sales agent.

SELECT emp.FirstName, emp.LastName, ROUND(SUM(inv.total),2) AS 'Total Sales'
FROM invoices inv
JOIN customers cust
on inv.CustomerId = cust.CustomerId
JOIN employees emp
ON cust.SupportRepId = emp.EmployeeId
WHERE emp.Title = "Sales Support Agent"
GROUP BY emp.FirstName;

--Which sales agent made the most dollars in sales in 2009?

SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM Employees emp
JOIN Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;

--What were the top 5 countries with the most sales?
SELECT BillingCountry, ROUND(SUM(total),2) AS 'Total Sales'
FROM invoices
Group By BillingCountry
ORDER BY ROUND(SUM(total),2) DESC LIMIT 5;

--What is the total cost of the songs on playlist 1?

SELECT ROUND(SUM(t.UnitPrice),2) AS 'Total Price'
FROM tracks t
JOIN playlist_track p
ON t.TrackId = p.TrackId
WHERE p.PlaylistId = '1';

--Who is the top artist with the most sales and how much were there sales?
SELECT art.Name AS 'Artist Name', ROUND(SUM(it.UnitPrice),2) AS 'Total Sales'
FROM invoices inv
JOIN invoice_items it
ON inv.InvoiceID = it.InvoiceID
JOIN tracks tr
ON it.TrackId = tr.TrackId
JOIN Albums a
ON tr.AlbumId = a.AlbumId
JOIN artists art
ON a.ArtistID = art.ArtistId
GROUP BY art.Name
ORDER BY ROUND(SUM(it.UnitPrice),2) DESC LIMIT 1;
